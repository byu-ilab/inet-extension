//
// Generated file, do not edit! Created by opp_msgc 4.0 from ./EmulationPlugMsg.msg.
//

#ifndef _EMULATIONPLUGMSG_M_H_
#define _EMULATIONPLUGMSG_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0400
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{ ... }} section:

#include "EmulationPlugCallback.h"
// end cplusplus



/**
 * Class generated from <tt>./EmulationPlugMsg.msg</tt> by opp_msgc.
 * <pre>
 * message EmulationPlugMsg {
 *     EmulationPlugCallback callback;
 * }
 * </pre>
 */
class EmulationPlugMsg : public cMessage
{
  protected:
    EmulationPlugCallback callback_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const EmulationPlugMsg&);

  public:
    EmulationPlugMsg(const char *name=NULL, int kind=0);
    EmulationPlugMsg(const EmulationPlugMsg& other);
    virtual ~EmulationPlugMsg();
    EmulationPlugMsg& operator=(const EmulationPlugMsg& other);
    virtual EmulationPlugMsg *dup() const {return new EmulationPlugMsg(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual EmulationPlugCallback& getCallback();
    virtual const EmulationPlugCallback& getCallback() const {return const_cast<EmulationPlugMsg*>(this)->getCallback();}
    virtual void setCallback(const EmulationPlugCallback& callback_var);
};

inline void doPacking(cCommBuffer *b, EmulationPlugMsg& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, EmulationPlugMsg& obj) {obj.parsimUnpack(b);}


#endif // _EMULATIONPLUGMSG_M_H_
