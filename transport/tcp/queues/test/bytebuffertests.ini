

[Config FRAGMENTS]
description = "fragments with TCPMsgByteBufferQueues"
**.tcpApp[0].mode = "fragments"
**.tcp.sendQueueClass = "TCPMsgByteBufferSendQueue"
**.tcp.receiveQueueClass = "TCPMsgByteBufferRcvQueue"


[General]
network = inet.transport.tcp.queues.test.ByteBufferNetwork
description = "whole with TCPMsgBasedQueues"
#total-stack = 200MB
tkenv-plugin-path = ../../../inet/etc/plugins
debug-on-errors = true
#sim-time-limit = 4s #3min #90s
#cmdenv-interactive = true
#record-eventlog = true
#eventlog-message-detail-pattern = httptRequestMessage:uri|httptReplyMessage:relatedUri
**.module-eventlog-recording = false

# Client Instructions
**.numClients = 100

	# TcpApps for clients
**.clients[*].tcpAppType = "ByteBufferClient"
**.clients[*].tcpApp[0].serverwww = "server.omnet.net"
**.clients[*].tcpApp[0].numRequestsToSend = 100
**.clients[*].tcpApp[0].requestPhaseDensity = 5
# Server Configuration
**.server.tcpAppType = "ByteBufferServer"
**.server.tcpApp[0].www = "server.omnet.net"
**.server.tcpApp[0].port = 1000
**.server.tcpApp[0].controller = "controller"
**.server.tcpApp[0].msgSizeStep = 0 #-1453
**.server.tcpApp[0].startingMsgSize = 1451 #2904
**.server.tcpApp[0].msgsInStepInterval = 1

**.tcpApp[0].mode = "whole"

# Default HTTP Tools Controller Configuration (Global Controller)
**.controller.config = xmldoc("config/controller_statmodel_oneserver.xml")
**.controller.logLevel = 2

# TCP Configuration
**.numTcpApps = 1
**.tcp.tcpAlgorithmClass = "TCPNewReno"
**.tcp.sendQueueClass = "TCPMsgBasedSendQueue"
**.tcp.receiveQueueClass = "TCPMsgBasedRcvQueue"
**.tcp.mss = 1452

# IP Configuration
**.configurator.networkAddress = "10.0.0.0"

# NIC configuration
	# General NIC configuration
**.ppp[*].queueType = "DropTailQueue"
**.ppp[*].queue.recordTrendOnly = true

	# Specific NIC configuration
**.clients[*].ppp[*].queue.frameCapacity = 10
**.dslam.ppp[*].queue.frameCapacity = 300
**.server.ppp[*].queue.frameCapacity = 300

# Recording parameters
**.tcpsocketapi.shouldMapTCPConnections = true

**.clients[*].tcpApp[0]**.vector-recording = true
**.server.tcpApp[0]**.vector-recording = true
**.tcp.**.vector-recording = true

**.ppp[*].queue.**.scalar-recording = true
**.ppp[*].queue.queuercvd.result-recording-modes = default
**.ppp[*].queue.queuelength.result-recording-modes = -vector,+max,+timeavg
**.ppp[*].queue.queuedrops.result-recording-modes = -vector,+timeavg

**.scalar-recording = false
**.vector-recording = false
